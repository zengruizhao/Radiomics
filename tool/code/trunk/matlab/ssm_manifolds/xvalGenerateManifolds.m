% xvalGenerateManifolds generates a set of manifolds using cross validation.
%
% manifolds=xvalManifold(A,labels,dim,gamma,nfold) returns a set of manifolds 
% generated by training using a leave one fold out scheme. Training is 
% performed by applying GE to the training set and using OSE-SSL on the left 
% out fold to estimate locations for the testing set.  
%
% labels are empty unless semi-supervised manifold learning is required.
%
% dim, gamma are inputs to manifold learning for dim=dimension of the
% manifold and gamma=scaling of A.
%
% Requires: OSE-SSL, Nystrom
%
% Created by: Rachel Sparks

function [manifolds, scale] = xvalGenerateManifolds(A,labels,dim,gamma,nfold,runs)

%initialize returned variables
sample_size = length(A);
manifolds   = zeros(sample_size,dim,nfold*runs);
scale       = zeros(dim, nfold*runs);

%determine the ind for the end of each nfold
foldind = round(linspace(0,sample_size,nfold+1));
    
for j = 1:runs
    %randomize A
    randind = randperm(sample_size);   
    newA    = A(randind,randind);
    
    for i = 1:nfold
        %obtain train and test sets.
        test  = (1+foldind(i):foldind(i+1));
        train = setdiff(1:sample_size,test);
        
        %perform OSE-SSL
        if isempty(labels)
            [v_est,d] = Nystrom(newA(train,[train test]),dim,gamma);
        else 
            newlabels = labels(randind);
            [v_est,d] = OSE_SSL(newA(train,[train test]),newlabels([train test]),dim,gamma);
        end
        
        %sort the points into the original format
        manifolds(randind([train test]),:,(((j-1)*nfold)+i)) = v_est;
        scale(:,(((j-1)*nfold)+i)) = d;
    end % for i = 1:nfold

end % for j = 1:runs

end