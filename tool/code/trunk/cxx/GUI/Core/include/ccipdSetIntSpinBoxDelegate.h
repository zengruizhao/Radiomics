#ifndef __ccipdSetIntSpinBoxDelegate_h
#define __ccipdSetIntSpinBoxDelegate_h



//////////////////////////////////////////////////////////////////////////////////////////

// ccipd includes
#include "ccipdMacros.h"
#include "ccipdSpinBoxDelegate.h"

// std includes
#include <memory>

//////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////////
class QSpinBox;
//////////////////////////////////////////////////////////////////////////////////////////



namespace ccipd
{



/**
 * This spin box delegate
 * will let the user set
 * the min and max values.
 */
class SetIntSpinBoxDelegate : public SpinBoxDelegate< QSpinBox, int >
{

  

//////////////////////////////////////////////////////////////////////////////////////////
  Q_OBJECT
//////////////////////////////////////////////////////////////////////////////////////////



public: // typedefs
//////////////////////////////////////////////////////////////////////////////////////////

  typedef SetIntSpinBoxDelegate            Self;
  typedef SpinBoxDelegate< QSpinBox, int > Superclass;

//////////////////////////////////////////////////////////////////////////////////////////



public: // functions
//////////////////////////////////////////////////////////////////////////////////////////

  SetIntSpinBoxDelegate( QObject * const parent = 0 ); ///< Constructor
  virtual ~SetIntSpinBoxDelegate();                    ///< Destructor

  /// What is the type of item we will insert into the Spin box?
  typedef Superclass::SpinValueType SpinValueType;

  ccipdSetByvalDeclareMacro( MinimumValue, SpinValueType );
  ccipdSetByvalDeclareMacro( MaximumValue, SpinValueType );

  /// Call this to manually specify the step
  ccipdSetByvalDeclareMacro( Step, SpinValueType );

  /// Call this to use the default step size
  virtual void ClearStep();

//////////////////////////////////////////////////////////////////////////////////////////



protected: // functions
//////////////////////////////////////////////////////////////////////////////////////////

  ccipdGetConstDeclareMacro( MinimumValue, SpinValueType )
  ccipdGetConstDeclareMacro( MaximumValue, SpinValueType )

  ccipdGetConstDeclareMacro( Step, SpinValueType )

//////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////////
  ccipdPIMPLMacro
//////////////////////////////////////////////////////////////////////////////////////////



}; // class SetIntSpinBoxDelegate
} // namespace ccipd
#endif //__ccipdSetIntSpinBoxDelegate_h
