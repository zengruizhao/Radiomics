


//////////////////////////////////////////////////////////////////////////////////////////
#include "ccipdPercentSpinBoxDelegate.h"
#include <QDoubleSpinBox>
//////////////////////////////////////////////////////////////////////////////////////////



namespace ccipd
{



//////////////////////////////////////////////////////////////////////////////////////////
PercentSpinBoxDelegate::PercentSpinBoxDelegate( QObject * const parent ) :
Superclass( parent )
{
} // constructor
//////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////////
QWidget * PercentSpinBoxDelegate::createEditor(
        QWidget              * parent,
  const QStyleOptionViewItem & option,
  const QModelIndex          & index) const
{

  // get the editor
  QWidget * const editor = this->Superclass::createEditor( parent, option, index );

  // see if we can dynamically cast it
  SpinBoxType * const spinBox = dynamic_cast< SpinBoxType * >( editor );

  // set the precision
  if ( spinBox )
    spinBox->setDecimals( 4 );

  return spinBox;

} // createEditor
//////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////////
PercentSpinBoxDelegate::~PercentSpinBoxDelegate()
{
} // destructor
//////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////////
PercentSpinBoxDelegate::SpinValueType PercentSpinBoxDelegate::GetMinimumValue() const
{
  return 0.0;
}
//////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////////
PercentSpinBoxDelegate::SpinValueType PercentSpinBoxDelegate::GetMaximumValue() const
{
  return 1.0;
}
//////////////////////////////////////////////////////////////////////////////////////////



} // namespace ccipd
