#ifndef __ccipdProstalignResults_h
#define __ccipdProstalignResults_h



//////////////////////////////////////////////////////////////////////////////////////////

// ccipd includes
#include "ccipdMacros.h"
#include "ccipdRGBSliceTypes.h" // our images

#ifdef _MSC_VER
#pragma warning( push, 0 )
#endif // _MSC_VER

// qt includes
#include <QDialog>

// std includes
#include <memory> // for smart pointers

#ifdef _MSC_VER
#pragma warning( pop )
#endif // _MSC_VER

//////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////////
// Forward Qt class declarations
class Ui_ProstalignResults;
//////////////////////////////////////////////////////////////////////////////////////////
 

namespace ccipd
{


/**
 * \brief Results GUI window for Prostalign.
 * 
 * \author  Rob Toth
 * \ingroup Prostalign
 */
class ProstalignResults : public QDialog
{



//////////////////////////////////////////////////////////////////////////////////////////
  Q_OBJECT
//////////////////////////////////////////////////////////////////////////////////////////



public:
//////////////////////////////////////////////////////////////////////////////////////////
  /// Constructor
  ProstalignResults(
    const RGBSliceType       * const fixedImage,
    const RGBSliceType       * const movingImage,
    const RGBSliceType       * const movedImage,
    const SliceTransformType * const transform );

  virtual ~ProstalignResults(); ///< Destructor
//////////////////////////////////////////////////////////////////////////////////////////



public slots:
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////



protected:
protected slots:
//////////////////////////////////////////////////////////////////////////////////////////

  /// For when the user selects a different image on the left.
  void SlotLeftImageComboChanged( const QString & comboItem );

  /// For when the user selects a different image on the right.
  void SlotRightImageComboChanged( const QString & comboItem );
  
  /// For when the user selects a different Checkerboard on the left.
  void SlotLeftCheckerboardComboChanged( const QString & comboItem );

  /// For when the user selects a different Checkerboard on the right.
  void SlotRightCheckerboardComboChanged( const QString & comboItem );

  /// For saving animation frames in a directory.
  void SlotSaveAnimation();
  
  /// For saving warp field.
  void SlotSaveWarpField();

  /// For showing options.
  void SlotOptions();

  /// For saving the result
  void SlotSaveMoved();

//////////////////////////////////////////////////////////////////////////////////////////
 


private:
//////////////////////////////////////////////////////////////////////////////////////////
  /// Designer form
  Ui_ProstalignResults * ui;
//////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////////
  /// PIMPL macro
  ccipdPIMPLMacro
//////////////////////////////////////////////////////////////////////////////////////////



}; // class ProstalignResults
} // namespace ccipd
#endif // __ccipdProstalignResults_h
