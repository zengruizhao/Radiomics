


//////////////////////////////////////////////////////////////////////////////////////////

// ccipd includes
#include "ccipdProstaFuseOptions.h"

#ifdef _MSC_VER
#pragma warning( push, 0 )
#endif // _MSC_VER

// Qt includes
#include "ui_ccipdProstaFuseOptions.h"

#ifdef _MSC_VER
#pragma warning( pop )
#endif // _MSC_VER

//////////////////////////////////////////////////////////////////////////////////////////



namespace ccipd
{
  


//////////////////////////////////////////////////////////////////////////////////////////
ProstaFuseOptions::ProstaFuseOptions( 
  const bool useAffineTransform,
  const bool useElasticTransform,
  const bool cropMovedImage	) :
ui( new Ui_ProstaFuseOptions )
{

  // set up the user interface
  this->ui->setupUi( this );

  // set up the options
  this->ui->m_UseAffineTransformCheckbox->setChecked( useAffineTransform );
  this->ui->m_UseElasticTransformCheckBox->setEnabled( useAffineTransform ); // is the elastic transform enabled
  this->ui->m_UseElasticTransformCheckBox->setChecked( useElasticTransform );
  this->ui->m_CropMovedImageCheckBox->setChecked( cropMovedImage );
} // Constructor
//////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////////
bool ProstaFuseOptions::GetUseAffineTransform() const
{

  return this->ui->m_UseAffineTransformCheckbox->isChecked();

} // GetUI
//////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////////
bool ProstaFuseOptions::GetUseElasticTransform() const
{

  return this->ui->m_UseElasticTransformCheckBox->isChecked();

} // GetUI
//////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////////
bool ProstaFuseOptions::GetCropMovedImage() const
{

  return this->ui->m_CropMovedImageCheckBox->isChecked();
} // GetUI
//////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////////
ProstaFuseOptions::~ProstaFuseOptions()
{
} // Destructor
//////////////////////////////////////////////////////////////////////////////////////////



} // namespace ccipd